<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>设计模式初探（一），六大设计原则</title>
      <link href="/2019/03/11/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%88%9D%E6%8E%A2%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%8C%E5%85%AD%E5%A4%A7%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/"/>
      <url>/2019/03/11/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%88%9D%E6%8E%A2%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%8C%E5%85%AD%E5%A4%A7%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/</url>
      
        <content type="html"><![CDATA[<p><strong>1、单一职责原则</strong><br>高内聚、细粒度，单一类的职责尽量少<br><strong>2、李氏替换原则</strong><br>子类不应该重写父类方法<br><strong>3、迪米特原则（最少知道原则）</strong><br>一个类应该尽量少的知道外部类的方法和属性<br><strong>4、依赖倒置原则</strong><br>依赖抽象（接口），而非依赖实现<br><strong>5、接口隔离</strong><br>接口中的方法应该尽可能的少<br><strong>6、开闭原则</strong><br>对修改关闭，对扩展开放</p>]]></content>
      
      
      
        <tags>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
